Input : arr[] = {3, 5, 10, 15, 20} 
Output : 3 
Explanation: The largest subset is 10, 5, 20.
10 is divisible by 5, and 20 is divisible by 10.

Input : arr[] = {1, 3, 6, 13, 17, 18} 
Output : 4
Explanation: The largest subset is 18, 1, 3, 6,
In the subsequence, 3 is divisible by 1, 
6 by 3 and 18 by 6.

given array must be in sorted order



public class largest_sum
{int [] dp =new int[100];
largest_sum(){

 for(int i=0;i<dp.length;i++)
 	dp[i]=1;}
 int calc(int n, int [] ar)
{	
	for(int i=n-1;i>=0;i--)
	{
		
	 if(ar[n]%ar[i]==0 &&dp[i]!=1)
			return dp[i];

		else if(ar[n]%ar[i]==0 && dp[i]==1)
		{
			dp[n]=dp[n]+calc(i,ar);
			return dp[n];
		}
	}
	return dp[n];
	}
int call_func(int ar[])
{
	int max1=1;

	for(int i=ar.length-1;i>=0;i--)
	{
		int max2= calc(i,ar);

		if(max2>max1)
			max1=max2;
	}
	return max1;
}
  public static void main(String[] z)
	{
		int[] ar = new int[]{3,5,10,15,20};
		//array must be in sorted order
		
		largest_sum obj= new largest_sum();
		System.out.println(obj.call_func(ar));

	}
}







